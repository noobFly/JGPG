apply plugin: 'java'
apply plugin: 'maven-publish'
apply from: 'mvn-sign-deploy.gradle'
defaultTasks 'build'

repositories.mavenCentral()

group = "se.soy.${project.name[1..-1].toLowerCase()}"
version = "1.0.0-SNAPSHOT"
ext {
  url = "https://github.com/simmel/${project.name}"
  gitRepo = "git@github.com:simmel/${project.name}.git"
}

dependencies.testCompile(
    ['junit:junit:4.+'],
    ['junit-addons:junit-addons:1.+'],
)
dependencies.compile(
 ['se.soy.securerstring:SecurerString:1.2.+'],
 ['org.slf4j:slf4j-api:1.7.+'],
 ['ch.qos.logback:logback-classic:1.1.+'],
)

task checkJhat {
  def result = exec {
    commandLine "pgrep", "-qf", "jhat", "-port"
    ignoreExitValue true
  }
  if (!result.getExitValue()) {
    logger.error('\033[0;31mERROR: Found jhat(s) running, this will produce erroneous test results!\033[0m')
  }
}
test.dependsOn checkJhat

test {
  systemProperty "test.resources", sourceSets['test'].output.resourcesDir.toString()
  systemProperty "temporaryDir", temporaryDir
  environment GNUPGHOME: file('src/test/resources/.gnupg')
  reports.junitXml.enabled = false
  reports.html.enabled = false
  testLogging.showStandardStreams = true
  forkEvery 1
  maxParallelForks Runtime.getRuntime().availableProcessors();
}

publishing {
  publications {
    jar(MavenPublication) {
      from components.java

      artifactId "${project.name[1..-1]}"

      artifact (sourceJar) {
        classifier = 'sources'
      }
      artifact (javadocJar) {
        classifier = 'javadoc'
      }

      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          parent {
            resolveStrategy = Closure.DELEGATE_ONLY
            groupId 'org.sonatype.oss'
            artifactId 'oss-parent'
            version '9'
          }
          name project.name
          description 'a Java wrapper for GPG2'
          url url
          packaging 'jar'
          scm {
            url project.gitRepo
            connection "scm:${project.gitRepo}"
            developerConnection "scm:${project.gitRepo}"
          }
          licenses {
            license {
              name 'ISC License'
              url 'https://www.isc.org/downloads/software-support-policy/isc-license/'
              distribution 'repo'
            }
          }
          developers {
            developer {
              id 'simmel'
              name 'Simon Lundstr√∂m'
              email 'simmel@soy.se'
            }
          }

          build {
            plugins {
              plugin {
                resolveStrategy = Closure.DELEGATE_ONLY
                groupId 'org.apache.maven.plugins'
                artifactId 'maven-gpg-plugin'
                version '1.4'
                configuration {
                  useAgent 'true'
                  executable 'src/build/scripts/gpg'
                }
              }
            }
          }
        }
      }
    }
  }
}
